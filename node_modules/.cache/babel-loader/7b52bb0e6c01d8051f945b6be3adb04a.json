{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/matthewkolmorgen/Projects/Shopping-LIst/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GroceryList from \"./components/GroceryList\";\nimport ListForm from \"./components/ListForm\";\nimport \"./styles.css\";\nconst groceriesData = [{\n  name: \"Bananas\",\n  id: 123,\n  purchased: false\n}, {\n  name: \"Torillas\",\n  id: 124,\n  purchased: false\n}, {\n  name: \"Milk\",\n  id: 1235,\n  purchased: false\n}, {\n  name: \"Pizza Sauce\",\n  id: 1246,\n  purchased: false\n}, {\n  name: \"Raw Honey\",\n  id: 1237,\n  purchased: false\n}, {\n  name: \"Granola\",\n  id: 1248,\n  purchased: false\n}];\n\nclass App extends React.Component {\n  // Constructor with state\n  constructor() {\n    super(); // build the state object here\n    // 1) state is an object, not individual variables\n    // 1a) state is initialized inside the contructor\n\n    this.togglePurchased = clickedItemId => {\n      // update our state\n      //   - loop through the groceries array (from state)\n      //   - find the item on which we clicked\n      //   - toggle that item's purchased property\n      //   - leave all other items alone\n      this.setState({\n        groceries: this.state.groceries.map(item => {\n          if (item.id === clickedItemId) {\n            return { ...item,\n              // name: \"Raw Honey\",\n              // id: 1237,\n              // purchased: false,\n              purchased: !item.purchased\n            };\n          } else {\n            return item;\n          }\n        })\n      });\n    };\n\n    this.addItem = itemName => {\n      const newItem = {\n        name: itemName,\n        id: new Date(),\n        purchased: false\n      };\n      this.setState({\n        groceries: [...this.state.groceries, newItem]\n      });\n    };\n\n    this.state = {\n      groceries: groceriesData,\n      togglePurchased: () => {},\n      name: \"Dustin\"\n    };\n  } // const [groceries, setGroceries] = useState(groceriesData);\n  // Class methods to update state\n  // 3) classes have \"properties\" not variables (no const)\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Shopping List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListForm, {\n          addItem: this.addItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GroceryList, {\n        groceries: this.state.groceries,\n        togglePurchased: this.togglePurchased\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 112,\n  columnNumber: 17\n}, this), rootElement);","map":{"version":3,"sources":["/Users/matthewkolmorgen/Projects/Shopping-LIst/src/index.js"],"names":["React","ReactDOM","GroceryList","ListForm","groceriesData","name","id","purchased","App","Component","constructor","togglePurchased","clickedItemId","setState","groceries","state","map","item","addItem","itemName","newItem","Date","render","rootElement","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,cAAP;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,EAAE,EAAE,GAFN;AAGEC,EAAAA,SAAS,EAAE;AAHb,CADoB,EAMpB;AACEF,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,EAAE,EAAE,GAFN;AAGEC,EAAAA,SAAS,EAAE;AAHb,CANoB,EAWpB;AACEF,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,EAAE,EAAE,IAFN;AAGEC,EAAAA,SAAS,EAAE;AAHb,CAXoB,EAgBpB;AACEF,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,EAAE,EAAE,IAFN;AAGEC,EAAAA,SAAS,EAAE;AAHb,CAhBoB,EAqBpB;AACEF,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,EAAE,EAAE,IAFN;AAGEC,EAAAA,SAAS,EAAE;AAHb,CArBoB,EA0BpB;AACEF,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,EAAE,EAAE,IAFN;AAGEC,EAAAA,SAAS,EAAE;AAHb,CA1BoB,CAAtB;;AAiCA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChC;AACAC,EAAAA,WAAW,GAAG;AACZ,YADY,CAEZ;AACA;AACA;;AAJY,SAgBdC,eAhBc,GAgBKC,aAAD,IAAmB;AACnC;AACA;AACA;AACA;AACA;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD,SAAX,CAAqBE,GAArB,CAA0BC,IAAD,IAAU;AAC5C,cAAIA,IAAI,CAACX,EAAL,KAAYM,aAAhB,EAA+B;AAC7B,mBAAO,EACL,GAAGK,IADE;AAEL;AACA;AACA;AACAV,cAAAA,SAAS,EAAE,CAACU,IAAI,CAACV;AALZ,aAAP;AAOD,WARD,MAQO;AACL,mBAAOU,IAAP;AACD;AACF,SAZU;AADC,OAAd;AAeD,KArCa;;AAAA,SAwCdC,OAxCc,GAwCHC,QAAD,IAAc;AACtB,YAAMC,OAAO,GAAG;AACdf,QAAAA,IAAI,EAAEc,QADQ;AAEdb,QAAAA,EAAE,EAAE,IAAIe,IAAJ,EAFU;AAGdd,QAAAA,SAAS,EAAE;AAHG,OAAhB;AAKA,WAAKM,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,SAAf,EAA0BM,OAA1B;AADC,OAAd;AAGD,KAjDa;;AAKZ,SAAKL,KAAL,GAAa;AACXD,MAAAA,SAAS,EAAEV,aADA;AAEXO,MAAAA,eAAe,EAAE,MAAM,CAAE,CAFd;AAGXN,MAAAA,IAAI,EAAE;AAHK,KAAb;AAKD,GAZ+B,CAchC;AAEA;AACA;;;AAoCAiB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,OAAO,EAAE,KAAKJ;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,WAAD;AACE,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWD,SADxB;AAEE,QAAA,eAAe,EAAE,KAAKH;AAFxB;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AApE+B;;AAuElC,MAAMY,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAxB,QAAQ,CAACqB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,WAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GroceryList from \"./components/GroceryList\";\nimport ListForm from \"./components/ListForm\";\nimport \"./styles.css\";\n\nconst groceriesData = [\n  {\n    name: \"Bananas\",\n    id: 123,\n    purchased: false\n  },\n  {\n    name: \"Torillas\",\n    id: 124,\n    purchased: false\n  },\n  {\n    name: \"Milk\",\n    id: 1235,\n    purchased: false\n  },\n  {\n    name: \"Pizza Sauce\",\n    id: 1246,\n    purchased: false\n  },\n  {\n    name: \"Raw Honey\",\n    id: 1237,\n    purchased: false\n  },\n  {\n    name: \"Granola\",\n    id: 1248,\n    purchased: false\n  }\n];\n\nclass App extends React.Component {\n  // Constructor with state\n  constructor() {\n    super();\n    // build the state object here\n    // 1) state is an object, not individual variables\n    // 1a) state is initialized inside the contructor\n    this.state = {\n      groceries: groceriesData,\n      togglePurchased: () => {},\n      name: \"Dustin\"\n    };\n  }\n\n  // const [groceries, setGroceries] = useState(groceriesData);\n\n  // Class methods to update state\n  // 3) classes have \"properties\" not variables (no const)\n  togglePurchased = (clickedItemId) => {\n    // update our state\n    //   - loop through the groceries array (from state)\n    //   - find the item on which we clicked\n    //   - toggle that item's purchased property\n    //   - leave all other items alone\n    this.setState({\n      groceries: this.state.groceries.map((item) => {\n        if (item.id === clickedItemId) {\n          return {\n            ...item,\n            // name: \"Raw Honey\",\n            // id: 1237,\n            // purchased: false,\n            purchased: !item.purchased\n          };\n        } else {\n          return item;\n        }\n      })\n    });\n  };\n\n  // addItem property\n  addItem = (itemName) => {\n    const newItem = {\n      name: itemName,\n      id: new Date(),\n      purchased: false\n    };\n    this.setState({\n      groceries: [...this.state.groceries, newItem]\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h1>Shopping List</h1>\n          <ListForm addItem={this.addItem} />\n        </div>\n        {/* 2) state is referenced through the \"this\" keyword */}\n        {/* 4) class methods (and all other class properties) are reference through the \"this\" keyword */}\n        <GroceryList\n          groceries={this.state.groceries}\n          togglePurchased={this.togglePurchased}\n        />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}